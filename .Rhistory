rename(allData2, "Subject ID"="Subject")
rename(allData2, c("Subject ID"="Subject"))
names(aallData)
names(allData2)
colnames(allData2)
gr<-group_by(allData2, Activity, Subject)
gr<-group_by(allData2, Activity, Subject ID)
names(allData2)[names(allData2)=="Subject ID"] <- "Subject"
names(allData2)
gr<-group_by(allData2, Activity, Subject)
summarise(allData2, mean())
?summarise_each
summarise_each(allData2, funs(mean))
str<-names(allData[1])
str
summarise(gr, mean(str))
summarise_each(gr, funs(mean))
final<-summarise_each(gr, funs(mean))
final
write.file(final, "tidy.txt")
write.table(final, "tidy.txt")
print(final)
aa<-read.table("tidy.txt")
aa
head(aa)
aa[,1:3]
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
write.table(meansByActandSub, "summaryData.txt")
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
debugSource('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
run_analysis <- function(){
corr<-function(directory, threshold=0){
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
run_analysis <- function(){
debugSource('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
run_analysis <- function(){
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
run_analysis <- function(){
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
x_test<-read.table("./test/X_test.txt")
y_test<-read.table("./test/y_test.txt")
x_train<-read.table("./train/X_train.txt")
y_train<-read.table("./train/y_train.txt")
allData<-rbind(x_train, x_test)
allLabels<-rbind(y_train, y_test)
featureNames<-read.table("./features.txt")
colnames(allData)<-featureNames[,2]
activityNames<-read.table("./activity_labels.txt")
colnames(allLabels)<-"Activity"
allLabels$Activity<-as.factor(allLabels$Activity)
levels(allLabels$Activity)<-activityNames$V2
subject_test<-read.table("./test/subject_test.txt")
subject_train<-read.table("./train/subject_train.txt")
allSubjects<-rbind(subject_train, subject_test)
colnames(allSubjects)<-"SubjectID"
containsMean<-grepl("mean", names(allData), ignore.case=TRUE)
containsSTD<-grepl("std", names(allData), ignore.case=TRUE)
inds<-which(containsMean | containsSTD)
allData<-allData[,inds]
allData<-cbind(allData, allLabels)
allData<-cbind(allData, allSubjects)
grouped<-group_by(allData, Activity, SubjectID)
meansByActandSub<-summarize_each(grouped, funs(mean))
write.table(meansByActandSub, "summaryData.txt")
}
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
activityNames<-read.table("./activity_labels.txt")
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
write.table(meansByActandSub, "summaryData.txt")
run_analysis <- function(){
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
x_test<-read.table("./test/X_test.txt")
y_test<-read.table("./test/y_test.txt")
x_train<-read.table("./train/X_train.txt")
y_train<-read.table("./train/y_train.txt")
allData<-rbind(x_train, x_test)
allLabels<-rbind(y_train, y_test)
featureNames<-read.table("./features.txt")
colnames(allData)<-featureNames[,2]
activityNames<-read.table("./activity_labels.txt")
colnames(allLabels)<-"Activity"
allLabels$Activity<-as.factor(allLabels$Activity)
levels(allLabels$Activity)<-activityNames$V2
subject_test<-read.table("./test/subject_test.txt")
subject_train<-read.table("./train/subject_train.txt")
allSubjects<-rbind(subject_train, subject_test)
colnames(allSubjects)<-"SubjectID"
containsMean<-grepl("mean", names(allData), ignore.case=TRUE)
containsSTD<-grepl("std", names(allData), ignore.case=TRUE)
inds<-which(containsMean | containsSTD)
allData<-allData[,inds]
allData<-cbind(allData, allLabels)
allData<-cbind(allData, allSubjects)
grouped<-group_by(allData, Activity, SubjectID)
meansByActandSub<-summarize_each(grouped, funs(mean))
write.table(meansByActandSub, "summaryData.txt")
}
numCompletes<-complete(paste(directory,sep = ""),1:332)
corr<-function(directory, threshold=0){
numCompletes<-complete(paste(directory,sep = ""),1:332)
valid<-numCompletes[,2]>threshold
validIDs<-numCompletes[valid,]
cors=numeric()
if(nrow(validIDs)>0){
for (i in 1:nrow(validIDs)){
num<-validIDs[i,1]
filename<-if(0<num && num<10){
paste("/00",as.character(num),".csv", sep="")
}
else if(10<=num&& num<100){
paste("/0", as.character(num),".csv", sep="")
}
else{
paste("/",as.character(num), ".csv", sep="")
}
data<-read.csv(paste(directory, filename, sep=""))
cors[i]<-cor(data[,2],data[,3], use = "complete.obs")
}
}
cors
}
run_analysis <- function(){
setwd("~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset")
x_test<-read.table("./test/X_test.txt")
y_test<-read.table("./test/y_test.txt")
x_train<-read.table("./train/X_train.txt")
y_train<-read.table("./train/y_train.txt")
allData<-rbind(x_train, x_test)
allLabels<-rbind(y_train, y_test)
featureNames<-read.table("./features.txt")
colnames(allData)<-featureNames[,2]
activityNames<-read.table("./activity_labels.txt")
colnames(allLabels)<-"Activity"
allLabels$Activity<-as.factor(allLabels$Activity)
levels(allLabels$Activity)<-activityNames$V2
subject_test<-read.table("./test/subject_test.txt")
subject_train<-read.table("./train/subject_train.txt")
allSubjects<-rbind(subject_train, subject_test)
colnames(allSubjects)<-"SubjectID"
containsMean<-grepl("mean", names(allData), ignore.case=TRUE)
containsSTD<-grepl("std", names(allData), ignore.case=TRUE)
inds<-which(containsMean | containsSTD)
allData<-allData[,inds]
allData<-cbind(allData, allLabels)
allData<-cbind(allData, allSubjects)
grouped<-group_by(allData, Activity, SubjectID)
meansByActandSub<-summarize_each(grouped, funs(mean))
write.table(meansByActandSub, "summaryData.txt")
}
meansByActandSub<-run_analysis()
meansByActandSub[,1:3]
meansByActandSub<-run_analysis()
meansByActandSub<-read.table("summaryData.txt")
meansByActandSub[,1:3]
file.exists("summaryData.txt")
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
run_analysis()
source('~/Programming/R/Getting and Cleaning Data/UCI HAR Dataset/run_analysis.R')
getwd()
names(final)
write.table(final, "./names.txt")
write.table(names(final), "./names.txt")
getwd()
run_analysis()
run_analysis()
download.file("https://s3.amazonaws.com/coursera-uploads/user-244bb7acf2ec25042c53746b/975117/asst-3/751b50c07b5111e598a3cf505b3b94da.txt", destfile = "Student1Data.txt", method = "curl")
student1<-read.table("Student1Data.txt")
names(student1)
head(student1[,1:3])
student1<-read.table("Student1Data.txt", header=TRUE)
head(student1[,1:3])
names(student1)
head(student1[,1:3])
head(final[,1:3])
head(student1[,1:10])
download.file("https://s3.amazonaws.com/coursera-uploads/user-78a6c60e0929b732113903ba/975117/asst-3/a24dee707b4e11e589d9537731bd876c.txt", destfile = "student2data.txt", method = "curl")
student2=read.table("student2data.txt")
names(student2)
head(student2[,1:5])
student2=read.table("student2data.txt", header = TRUE)
download.file("https://s3.amazonaws.com/coursera-uploads/user-39096567052d89b411a362b4/975117/asst-3/cfbbf5307b5011e589d9537731bd876c.txt", destfile = "student3data.txt", method = "curl")
student3=read.table("student3data.txt", header = TRUE)
head(student3[,1:10])
download.file("https://s3.amazonaws.com/coursera-uploads/user-e341ae46f7b11e419673f64e/975117/asst-3/d3d276907b4a11e5b4ef95d87d5c381c.txt", destfile = "student4data.txt", method)
download.file("https://s3.amazonaws.com/coursera-uploads/user-e341ae46f7b11e419673f64e/975117/asst-3/d3d276907b4a11e5b4ef95d87d5c381c.txt", destfile = "student4data.txt", method = "curl")
student4<-read.table("student4", header = TRUE)
student4<-read.table("student4data.txt", header = TRUE)
names(student4)
head(student4[,84:88])
head(student1[,1:10])
head(student2[,1:10])
head(student3[,1:10])
date()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "quiz4data1.csv", method = "curl")
data1<-read.csv("quiz4data1.csv")
names(data1)
?strsplit
strsplit(data1, "wgtp")
strsplit(names(data1, "wgtp"))
strsplit(names(data1), "wgtp")
x<-c("seattle")
strsplit(x, "tt")
strsplit(x, "seattle")
strsplit(x, "t")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz4data2.csv", method = "curl")
data2<-read.csv("quiz4data2.csv")
head(data2)
getwd()
setwd("~/Programming/R/GettingandCleaningData")
data2<-read.csv("quiz4data2.csv", skip = 5, nrows = 190)
head(data2)
data2<-read.csv("quiz4data2.csv", header = FALSE, skip = 5, nrows = 190)
head(data2)
tail(data2)
data2<-data2[,c(1,2,4,5)]
head(data2)
class(data2$V5)
?sub
GDP<-data2$V5
GDP
gsub("_", "", "hi_world")
gsub("_", "", c("hi_world", "h_e_l_l_o")
)
gdp<-gsub(",", "", GDP)
gdp
class(gdp)
gdp<-as.numeric(gdp)
gdp
mean(gdp)
countryNames<-data2$V4
countryNames
countryNames<-as.character(countryNames)
grep("^United", countryNames)
grep("**United", countryNames)
grep("*United", countryNames)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "quiz4data3.csv", method = "curl")
data3<-read.csv("quiz4data3.csv")
names(data3)
head(data2)
data2$V5<-as.numeric(gsub(",", "", data2$V5))
head(data2)
data3$Special.Notes
?grepl
grepl("June", data3$Special.Notes, ignore.case = TRUE)
aa<-grepl("June", data3$Special.Notes, ignore.case = TRUE)
data3$Special.Notes[,aa]
data3$Special.Notes[aa]
library(quantmod)
install.packages(quantmod)
install.packages("quantmod")
library(quantmod)
amzn=getSymbols("AMZN", auto.assign = FALSE)
sampleTimes=index(amzn)
amzn
class(amzn)
sampleTimes
class(sampleTimes)
head(sampleTimes)
format(head(sampleTimes), %A)
format(head(sampleTimes), "%A")
aa<-format(head(sampleTimes), "%A")
grep("Monday", aa)
days<-format(sampleTimes, "%A")
test<-grepl("Monday", days)
sum(test)
test<-grepl("2012", sampleTimes)
times2012<-sampleTimes[test]
days2012<-format(times2012, "%A")
t<-grepl("Monday", days2012)
sum(t)
?Devices
dev.cur()
quartz()
dev.cur()
setwd("~/Programming/R/ExploratoryDataAnalysis/ExpDataAnalysisProject1")
data<-read.table("household_power_consumption.txt")
head(data)
data<-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
head(data)
class(data[,1])
?strptime
data[1,1]
data[,1]<-as.character(data[,1])
data[1,1]
?as.Date
?strptime
dates<-data[,1]
dates<-strptime(dates)
dates<-strptime(dates, format = "%Y-%m-%d")
head(dates)
dates<-data[,1]
head(dates)
strptime("16/12/2006")
strptime("16/12/2006", format = %Y-%m-%d)
strptime("16/12/2006", format = "%Y-%m-%d"")
strptime("16/12/2006", format = "%Y-%m-%d")
strptime("16/12/2006", format = "%Y-%m-%d")
strptime("16/12/2006", format = "%Y %m %d")
strptime("16/12/2006", format = "%Y%m%d")
strptime("16/12/2006", format = "%Y/%m/%d")
class(strptime("16/12/2006", format = "%Y/%m/%d"))
strptime("16/12/2006", format = "%d/%m/%Y")
data[,1]<-strptime(data[,1], format = "%d/%m/%Y")
head(data)
data[1,1]
class(data[1,1])
?remove
remove(data)
remove(data1)
remove(data2)
remove(data3)
remove(final)
remove(featureNames)
remove(gr)
remove(student1)
remove(student2)
remove(student3)
remove(student4)
remove(x_test)
remove(y_train)
remove(x_train)
remove(y_test)
remove(subject_test)
remove(subject_train)
remove(meansByActandSub)
data<-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
remove(dates)
head(data)
data[,1]<-as.character(data[,1])
data[1,1]
strptime(data[1,1], format = "%d/%m/%Y")
dates<-data[,1]
dates<-strptime(dates, format = "%d/%m/%Y")
dates[1]
class(dates)
as.date(dates[1])
?as.Date
install.packages("base")
library("base")
install.packages("base)
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
?as.Date
as.date(dates[1])
as.Date(dates[1])
dates<-as.Date(dates)
dates[1] < dates[2]
dates[1] > dates[2]
data[,1]<-as.Date(data[,1])
head(data)
data[,1]<-dates
head(data)
data[66000,]
dates[2]-dates[1]
dates[1000]-dates[1]
dates[1000]<dates[1]
dates[1000]>dates[1]
which(dates == "2007-01-01")
which(dates == "2007-02-01")
which("2007-02-01" <= dates <= "2007-02-02")
which("2007-02-01" <= dates && dates <= "2007-02-02")
which("2007-02-01" <= dates)
which("2007-02-01" <= dates & dates <= "2007-02-02")
test<-data[which("2007-02-01" <= data[,1] & data[,1] <= "2007-02-02"),]
head(test)
tail(test)
setwd("~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1")
60*24
?hist
hist(test$Global_active_power)
class(test)
class(test$Global_active_power)
test$Global_active_power <- as.numeric(test$Global_active_power)
head(test)
head(data)
test<-plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
getwd()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
test
debugSource('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
n
n
n
n
n
n
debugSource('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
debugSource('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
test<-plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
head(test)
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
head(test)
powers<-test$Global_active_power
head(powers)
as.numeric(powers)
powers(1)
powers[1]
as.numeric(powers[1])
powers[1]+1
as.numeric(powers[1])+1
as.character(powers[1])
as.numeric(as.character(powers[1]))
powers<-as.numeric(as.character(powers))
powers[1]
powers[1]+1
head(test)
powers
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
head(test)
test$Global_active_power[1]
test<-plot1(data)
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1(data)
test<-plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
test<-plot1()
hist(test$Global_active_power)
quartz()
hist(test$Global_active_power)
hist(test$Global_active_power)
quartz()
hist(test$Global_active_power)
?par
par()
hist(test$Global_active_power, col = "red")
par(xlab = "Global Active Power")
title("Global Active Power")
title("")
par(mar = c(5.1, 5.1, 4.1, 2.1))
hist(test$Global_active_power, col = "red")
par(mar = c(5.1, 5.5, 4.1, 2.1))
hist(test$Global_active_power, col = "red")
dev.copy(png, file("test.png"))
dev.copy(png, file = "test.png")
dev.off()
par(mar=c(5.1, 4.1, 4.1, 2.1))
hist(test$Global_active_power, col = "red")
quartz()
par(mar=c(5.1, 4.1, 4.1, 2.1))
hist(test$Global_active_power, col = "red")
dev.list()
?hist
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
plot1()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
plot1()
quartz()
plot(test$Time, test$Global_active_power)
head(test)
class(test$Time)
?strptime
strptime(test[1,1:2], format = "%Y/%m/%d %H:%M:%S")
strptime(test[1,1:2], format = "%Y/%m/%d")
data<-test
paste("hi", "ell")
paste(test[1,1], test[1,2])
test$DateTime<-paste(test$Date, test$Time)
head(test)
strptime(test$DateTime, format = "%Y-%M-%D %H:%M:%S")
dt<-test$DateTime[1]
dt
class(dt)
strptime(dt)
strptime(dt, format = "%Y-%M-%D")
strptime(dt, format = "%Y-%M-%D %H:%M:%S")
strptime(dt, format = "%Y-%M-%D, %H:%M:%S")
d<-test[1,1]
d
t<-test[1,2]
t
t<-as.character(test[2,2])
t
strptime(t, format = "%H:%M:%S")
strptime(dt, format = "%Y-%m-%d, %H:%M:%S")
strptime(dt, format = "%Y-%m-%d %H:%M:%S")
strptime(test$DateTime, format = "%Y-%m-%d %H:%M:%S")
test$DateTime<- strptime(test$DateTime, format = "%Y-%m-%d %H:%M:%S")
head(test)
class(test$DateTime)
plot(test$DateTime, test$Global_active_power)
lines(test$DateTime, test$Global_active_power)
?plot
plot(test$DateTime, test$Global_active_power, type = "l")
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
plot2()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot2.R')
plot2()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
dev.off()
source('~/Programming/R/ExploratoryDataAnalysis/ExData_Plotting1/plot1.R')
